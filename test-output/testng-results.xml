<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="4" total="7" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="73823" started-at="2020-06-04T03:59:05 IST" finished-at="2020-06-04T04:00:19 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="73823" started-at="2020-06-04T03:59:05 IST" finished-at="2020-06-04T04:00:19 IST">
      <class name="org.goodReads.test.GetBookNameOfBookerPrizeWinner">
        <test-method status="PASS" signature="setValues()[pri:0, instance:org.goodReads.test.GetBookNameOfBookerPrizeWinner@6a1aab78]" name="setValues" is-config="true" duration-ms="0" started-at="2020-06-04T03:59:05 IST" finished-at="2020-06-04T03:59:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setValues -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.goodReads.test.GetBookNameOfBookerPrizeWinner@6a1aab78]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-06-04T03:59:44 IST" finished-at="2020-06-04T03:59:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.goodReads.test.GetBookNameOfBookerPrizeWinner@6a1aab78]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-06-04T03:59:44 IST" finished-at="2020-06-04T03:59:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getNameOfBookePrizeWinner(java.lang.String, java.lang.String)[pri:0, instance:org.goodReads.test.GetBookNameOfBookerPrizeWinner@6a1aab78]" name="getNameOfBookePrizeWinner" duration-ms="35201" started-at="2020-06-04T03:59:44 IST" data-provider="fetchData" finished-at="2020-06-04T04:00:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[The Testaments]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNameOfBookePrizeWinner -->
      </class> <!-- org.goodReads.test.GetBookNameOfBookerPrizeWinner -->
      <class name="org.goodReads.test.GetBookNameBasedOnDescription">
        <test-method status="PASS" signature="setValues()[pri:0, instance:org.goodReads.test.GetBookNameBasedOnDescription@74ad1f1f]" name="setValues" is-config="true" duration-ms="0" started-at="2020-06-04T03:59:05 IST" finished-at="2020-06-04T03:59:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setValues -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.goodReads.test.GetBookNameBasedOnDescription@74ad1f1f]" name="beforeClass" is-config="true" duration-ms="1" started-at="2020-06-04T03:59:09 IST" finished-at="2020-06-04T03:59:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="getBookNameBasedOnDescription(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.goodReads.test.GetBookNameBasedOnDescription@74ad1f1f]" name="getBookNameBasedOnDescription" duration-ms="35040" started-at="2020-06-04T03:59:09 IST" data-provider="fetchData" finished-at="2020-06-04T03:59:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Paulo Coelho]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[to travel in search of a worldly treasure]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.goodreads.com/book/show/865.The_Alchemist]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBookNameBasedOnDescription -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.goodReads.test.GetBookNameBasedOnDescription@74ad1f1f]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-06-04T03:59:09 IST" finished-at="2020-06-04T03:59:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- org.goodReads.test.GetBookNameBasedOnDescription -->
      <class name="org.goodReads.test.GetLatestBookOfAuthor">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:org.goodReads.test.GetLatestBookOfAuthor@491cc5c9]" name="beforeSuite" is-config="true" duration-ms="404" started-at="2020-06-04T03:59:05 IST" finished-at="2020-06-04T03:59:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="setValues()[pri:0, instance:org.goodReads.test.GetLatestBookOfAuthor@491cc5c9]" name="setValues" is-config="true" duration-ms="0" started-at="2020-06-04T03:59:05 IST" finished-at="2020-06-04T03:59:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setValues -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.goodReads.test.GetLatestBookOfAuthor@491cc5c9]" name="beforeClass" is-config="true" duration-ms="1" started-at="2020-06-04T03:59:05 IST" finished-at="2020-06-04T03:59:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.goodReads.test.GetLatestBookOfAuthor@491cc5c9]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2020-06-04T03:59:06 IST" finished-at="2020-06-04T03:59:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getLatestBookOfAuthor(java.lang.String, java.lang.String)[pri:0, instance:org.goodReads.test.GetLatestBookOfAuthor@491cc5c9]" name="getLatestBookOfAuthor" duration-ms="3124" started-at="2020-06-04T03:59:06 IST" data-provider="fetchData" finished-at="2020-06-04T03:59:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[J.k.rowling]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Fantastic Beasts - The Crimes of Grindelwald: The Original Screenplay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLatestBookOfAuthor -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:org.goodReads.test.GetLatestBookOfAuthor@491cc5c9]" name="afterSuite" is-config="true" duration-ms="181" started-at="2020-06-04T04:00:19 IST" finished-at="2020-06-04T04:00:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- org.goodReads.test.GetLatestBookOfAuthor -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
