<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="2" total="4" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="37630" started-at="2020-06-03T19:57:15 IST" finished-at="2020-06-03T19:57:52 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="37630" started-at="2020-06-03T19:57:15 IST" finished-at="2020-06-03T19:57:52 IST">
      <class name="org.goodReads.Test.TC002_GetBookNameBasedOnDescription">
        <test-method status="PASS" signature="setValues()[pri:0, instance:org.goodReads.Test.TC002_GetBookNameBasedOnDescription@6a1aab78]" name="setValues" is-config="true" duration-ms="0" started-at="2020-06-03T19:57:15 IST" finished-at="2020-06-03T19:57:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setValues -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.goodReads.Test.TC002_GetBookNameBasedOnDescription@6a1aab78]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-06-03T19:57:18 IST" finished-at="2020-06-03T19:57:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.goodReads.Test.TC002_GetBookNameBasedOnDescription@6a1aab78]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-06-03T19:57:18 IST" finished-at="2020-06-03T19:57:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getBookNameBasedOnDescription(java.lang.String, java.lang.String)[pri:0, instance:org.goodReads.Test.TC002_GetBookNameBasedOnDescription@6a1aab78]" name="getBookNameBasedOnDescription" duration-ms="34101" started-at="2020-06-03T19:57:18 IST" data-provider="fetchData" finished-at="2020-06-03T19:57:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Paulo Coelho]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[to travel in search of a worldly treasure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBookNameBasedOnDescription -->
      </class> <!-- org.goodReads.Test.TC002_GetBookNameBasedOnDescription -->
      <class name="org.goodReads.Test.TC001_GetLatestBookOfAuthor">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:org.goodReads.Test.TC001_GetLatestBookOfAuthor@74ad1f1f]" name="beforeSuite" is-config="true" duration-ms="516" started-at="2020-06-03T19:57:14 IST" finished-at="2020-06-03T19:57:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="setValues()[pri:0, instance:org.goodReads.Test.TC001_GetLatestBookOfAuthor@74ad1f1f]" name="setValues" is-config="true" duration-ms="1" started-at="2020-06-03T19:57:15 IST" finished-at="2020-06-03T19:57:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setValues -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.goodReads.Test.TC001_GetLatestBookOfAuthor@74ad1f1f]" name="beforeClass" is-config="true" duration-ms="1" started-at="2020-06-03T19:57:15 IST" finished-at="2020-06-03T19:57:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.goodReads.Test.TC001_GetLatestBookOfAuthor@74ad1f1f]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2020-06-03T19:57:15 IST" finished-at="2020-06-03T19:57:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="getLatestBookOfAuthor(java.lang.String, java.lang.String)[pri:0, instance:org.goodReads.Test.TC001_GetLatestBookOfAuthor@74ad1f1f]" name="getLatestBookOfAuthor" duration-ms="3113" started-at="2020-06-03T19:57:15 IST" data-provider="fetchData" finished-at="2020-06-03T19:57:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[J.k.rowling]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Fantastic Beasts - The Crimes of Grindelwald: The Original Screenplay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException
at org.goodReads.utils.HTMLReporter.reportRequest(HTMLReporter.java:68)
at org.goodReads.base.RestAssuredBase.verifyActualAndExpectedValue(RestAssuredBase.java:125)
at org.goodReads.Test.TC001_GetLatestBookOfAuthor.getLatestBookOfAuthor(TC001_GetLatestBookOfAuthor.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLatestBookOfAuthor -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:org.goodReads.Test.TC001_GetLatestBookOfAuthor@74ad1f1f]" name="afterSuite" is-config="true" duration-ms="231" started-at="2020-06-03T19:57:52 IST" finished-at="2020-06-03T19:57:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- org.goodReads.Test.TC001_GetLatestBookOfAuthor -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
